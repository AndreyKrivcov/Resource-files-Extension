#include "resource_files_manager.h"
${POINTERS_FOR_EMBED_FILES}

namespace Resource_files{
	
	void Resource_files_getter::set_file_pointers(){
		${FILL_IN_POINTERS}	
	}

	Resource_files_getter::Resource_files_getter(){
		set_file_pointers();
	}
	
	std::vector<std::string> Resource_files_getter::get_file_names(){
		std::vector<std::string> v;
		for(const auto &elem : file_pointers){
			v.push_back(elem.first);
		}

		return v;
	}
	
	bool Resource_files_getter::get_file_ptr(const std::string & file_name, File_ptr & file){
		auto it = file_pointers.find(file_name);
		if(it == file_pointers.end())
			return false;
		
		file.start = it->second.start;
		file.end = it->second.end;
		
		return true;
	}

	std::shared_ptr<Resource_files_getter> Resource_files_getter::get_instance(){
		static std::shared_ptr<Resource_files_getter> ptr(new Resource_files_getter());
		return ptr;
	} 

	File_ptr::File_ptr(char *_start, char *_end) : 
	start(_start),
	end(_end){}

}
